// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotNetRogueLootAPI;

namespace dotNetRogueLootAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210324110132_TypesAndRaritiesMigration")]
    partial class TypesAndRaritiesMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dotNetRogueLootAPI.Models.WeaponRarity", b =>
                {
                    b.Property<string>("RarityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AmountOfEffects")
                        .HasColumnType("int");

                    b.Property<int>("AppearChance")
                        .HasColumnType("int");

                    b.Property<double>("StatModMul")
                        .HasColumnType("float");

                    b.HasKey("RarityName");

                    b.ToTable("WeaponRarities");
                });

            modelBuilder.Entity("dotNetRogueLootAPI.Models.WeaponType", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("DodgeChance")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("WeaponTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
